/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/content-tm-block.js":
/*!*********************************!*\
  !*** ./src/content-tm-block.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./icons */ \"./src/icons.js\");\n/* harmony import */ var _layout_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout-type */ \"./src/layout-type.js\");\n/* harmony import */ var _images_timeline_png__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./images/timeline.png */ \"./src/images/timeline.png\");\n/* harmony import */ var _style_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./style.scss */ \"./src/style.scss\");\n/**\r\n * Block dependencies\r\n */\n\n\n\n\n\n\n/**\r\n * Internal block libraries\r\n */\nvar __ = wp.i18n.__;\nvar registerBlockType = wp.blocks.registerBlockType;\nvar baseURL = ctlUrl.CTP_PLUGIN_URL;\nvar wpBaseURL = ctlUrl.baseURL;\nvar LayoutImgPath = baseURL + '/includes/gutenberg-block/layout-images';\nvar _wp = wp,\n  apiFetch = _wp.apiFetch;\nvar _wp$editor = wp.editor,\n  RichText = _wp$editor.RichText,\n  InspectorControls = _wp$editor.InspectorControls,\n  BlockControls = _wp$editor.BlockControls;\nvar Fragment = wp.element.Fragment;\nvar _wp$components = wp.components,\n  PanelBody = _wp$components.PanelBody,\n  PanelRow = _wp$components.PanelRow,\n  TextareaControl = _wp$components.TextareaControl,\n  TextControl = _wp$components.TextControl,\n  Dashicon = _wp$components.Dashicon,\n  Toolbar = _wp$components.Toolbar,\n  ButtonGroup = _wp$components.ButtonGroup,\n  Button = _wp$components.Button,\n  SelectControl = _wp$components.SelectControl,\n  Tooltip = _wp$components.Tooltip,\n  RangeControl = _wp$components.RangeControl,\n  TabPanel = _wp$components.TabPanel,\n  Card = _wp$components.Card,\n  CardBody = _wp$components.CardBody,\n  ExternalLink = _wp$components.ExternalLink;\n/**\r\n * Register block\r\n\r\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (registerBlockType('cool-content-timeline/ctl-shortcode-block', {\n  // Block Title\n  title: __('Post Timeline Shortcode'),\n  // Block Description\n  description: __('Cool Post Timeline Shortcode Generator.'),\n  // Block Category\n  category: 'common',\n  // Block Icon\n  icon: _icons__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  // Block Keywords\n  keywords: [__('Cool Content timeline'), __('Content timeline shortcode'), __('Cool Content timeline block')],\n  attributes: {\n    layout: {\n      type: 'string',\n      \"default\": 'default'\n    },\n    skin: {\n      type: 'string',\n      \"default\": 'default'\n    },\n    postperpage: {\n      type: 'string',\n      \"default\": 10\n    },\n    storyDateVisibility: {\n      type: 'string',\n      \"default\": 'show'\n    },\n    dateformat: {\n      type: 'string',\n      \"default\": 'F j'\n    },\n    customDateFormat: {\n      type: 'string',\n      \"default\": ''\n    },\n    icons: {\n      type: 'string',\n      \"default\": 'dot'\n    },\n    animation: {\n      type: 'string',\n      \"default\": 'none'\n    },\n    designs: {\n      type: 'string',\n      \"default\": 'design-1'\n    },\n    storycontent: {\n      type: 'string',\n      \"default\": 'short'\n    },\n    compactelepos: {\n      type: 'string',\n      \"default\": 'main-date'\n    },\n    pagination: {\n      type: 'string',\n      \"default\": 'default'\n    },\n    hrYearLabel: {\n      type: 'string',\n      \"default\": 'show'\n    },\n    hrNavigation: {\n      type: 'string',\n      \"default\": 'hide'\n    },\n    hrNavigationPosition: {\n      type: 'string',\n      \"default\": ''\n    },\n    navigationStyle: {\n      type: 'string',\n      \"default\": 'style-1'\n    },\n    filters: {\n      type: 'string',\n      \"default\": 'no'\n    },\n    filtercategories: {\n      type: 'string',\n      \"default\": ''\n    },\n    items: {\n      type: 'string',\n      \"default\": ''\n    },\n    lineFilling: {\n      type: 'string',\n      \"default\": 'false'\n    },\n    readMoreVisibility: {\n      type: 'string',\n      \"default\": 'show'\n    },\n    contentLength: {\n      type: 'string',\n      \"default\": 50\n    },\n    postMetaVisibility: {\n      type: 'string',\n      \"default\": 'hide'\n    },\n    autoplay: {\n      type: 'string',\n      \"default\": 'false'\n    },\n    autoplayspeed: {\n      type: 'string',\n      \"default\": 3000\n    },\n    starton: {\n      type: 'string',\n      \"default\": 0\n    },\n    order: {\n      type: 'string',\n      \"default\": 'DESC'\n    },\n    // content tm specific fields\n    posttype: {\n      type: 'string',\n      \"default\": 'post'\n    },\n    taxonomy: {\n      type: 'string',\n      \"default\": 'category'\n    },\n    postcategory: {\n      type: 'string',\n      \"default\": ''\n    },\n    tags: {\n      type: 'string',\n      \"default\": ''\n    },\n    isPreview: {\n      type: 'boolean',\n      \"default\": false\n    },\n    filterSettingUsed: {\n      type: 'boolean',\n      \"default\": false\n    },\n    metaKey: {\n      type: 'string',\n      \"default\": ''\n    },\n    settingsMigration: {\n      type: 'string',\n      \"default\": 'true'\n    }\n  },\n  // Defining the edit interface\n  edit: function edit(props) {\n    var skinOptions = [{\n      value: 'default',\n      label: __('Default')\n    }, {\n      value: 'dark',\n      label: __('Dark')\n    }, {\n      value: 'light',\n      label: __('Light')\n    }];\n    var DfromatOptions = [{\n      value: \"F j\",\n      label: \"January 1 (F j)\"\n    }, {\n      value: \"F j Y\",\n      label: \"January 1 2019 (F j Y)\"\n    }, {\n      value: \"Y-m-d\",\n      label: \"2019-01-01 (Y-m-d)\"\n    }, {\n      value: \"m/d/Y\",\n      label: \"01/01/2019 (m/d/Y)\"\n    }, {\n      value: \"d/m/Y\",\n      label: \"01/01/2019 (d/m/Y)\"\n    }, {\n      value: \"F j Y g:i A\",\n      label: \"January 1 2019 11:10 AM (F j Y g:i A)\"\n    }, {\n      value: \"Y\",\n      label: \" 2019(Y)\"\n    }, {\n      label: \"Custom\",\n      value: \"custom\"\n    }];\n    var layoutOptions = [{\n      value: 'default',\n      label: __('Vertical')\n    }, {\n      value: 'horizontal',\n      label: __('Horizontal')\n    }, {\n      value: 'one-side',\n      label: __('One Side Layout')\n    }, {\n      value: 'compact',\n      label: __('Compact Layout')\n    }];\n    var animationOptions = [{\n      label: \"None\",\n      value: \"none\"\n    }, {\n      label: \"fade\",\n      value: \"fade\"\n    }, {\n      label: \"zoom-in\",\n      value: \"zoom-in\"\n    }, {\n      label: \"flip-right\",\n      value: \"flip-right\"\n    }, {\n      label: \"zoom-out\",\n      value: \"zoom-out\"\n    }, {\n      label: \"fade-up\",\n      value: \"fade-up\"\n    }, {\n      label: \"fade-down\",\n      value: \"fade-down\"\n    }, {\n      label: \"fade-left\",\n      value: \"fade-left\"\n    }, {\n      label: \"fade-right\",\n      value: \"fade-right\"\n    }, {\n      label: \"fade-up-right\",\n      value: \"fade-up-right\"\n    }, {\n      label: \"fade-up-left\",\n      value: \"fade-up-left\"\n    }, {\n      label: \"fade-down-right\",\n      value: \"fade-down-right\"\n    }, {\n      label: \"fade-down-left\",\n      value: \"fade-down-left\"\n    }, {\n      label: \"flip-up\",\n      value: \"flip-up\"\n    }, {\n      label: \"flip-down\",\n      value: \"flip-down\"\n    }, {\n      label: \"flip-left\",\n      value: \"flip-left\"\n    }, {\n      label: \"slide-up\",\n      value: \"slide-up\"\n    }, {\n      label: \"slide-left\",\n      value: \"slide-left\"\n    }, {\n      label: \"slide-right\",\n      value: \"slide-right\"\n    }, {\n      label: \"zoom-in-up\",\n      value: \"zoom-in-up\"\n    }, {\n      label: \"zoom-in-down\",\n      value: \"zoom-in-down\"\n    }, {\n      label: \"slide-down\",\n      value: \"slide-down\"\n    }, {\n      label: \"zoom-in-left\",\n      value: \"zoom-in-left\"\n    }, {\n      label: \"zoom-in-right\",\n      value: \"zoom-in-right\"\n    }, {\n      label: \"zoom-out-up\",\n      value: \"zoom-out-up\"\n    }, {\n      label: \"zoom-out-down\",\n      value: \"zoom-out-down\"\n    }, {\n      label: \"zoom-out-left\",\n      value: \"zoom-out-left\"\n    }, {\n      label: \"zoom-out-right\",\n      value: \"zoom-out-right\"\n    }];\n    var timelineDesigns = [{\n      label: \"Default\",\n      value: \"design-1\"\n    }, {\n      label: \"Flat Design\",\n      value: \"design-2\"\n    }, {\n      label: \"Classic Design\",\n      value: \"design-3\"\n    }, {\n      label: \"Elegant Design\",\n      value: \"design-4\"\n    }, {\n      label: \"Clean Design\",\n      value: \"design-5\"\n    }, {\n      label: \"Modern Design\",\n      value: \"design-6\"\n    }, {\n      label: \"Minimal Design\",\n      value: \"design-7\"\n    }];\n    var compact_ele_pos = [{\n      label: \"On top date/label below title\",\n      value: \"main-date\"\n    }, {\n      label: \"On top title below date/label\",\n      value: \"main-title\"\n    }];\n    var paginationOptions = [{\n      label: \"Off\",\n      value: \"off\"\n    }, {\n      label: \"Ajax Load More\",\n      value: \"ajax_load_more\"\n    }];\n    var hrNavigationPositionOption = [{\n      label: \"Left\",\n      value: \"left\"\n    }, {\n      label: \"Right\",\n      value: \"right\"\n    }];\n    var hrNavPostion = 'horizontal' === props.attributes.layout ? 'left' : 'right';\n    if (props.attributes.filterSettingUsed == false && props.attributes.postcategory != '' && props.attributes.filtercategories == '' && props.attributes.filters == 'yes') {\n      props.setAttributes({\n        filtercategories: props.attributes.postcategory\n      });\n      props.setAttributes({\n        filterSettingUsed: true\n      });\n    }\n    undefined === props.attributes.settingsMigration || 'true' === props.attributes.settingsMigration && props.setAttributes({\n      settingsMigration: 'false'\n    });\n\n    // Function to add conditional options to an array\n    var addConditionalOptions = function addConditionalOptions(options, label, value, position) {\n      if (position) {\n        var newOptions = {\n          label: label,\n          value: value\n        };\n        options.splice(position, 0, newOptions);\n      } else {\n        var _newOptions = {\n          label: label,\n          value: value\n        };\n        options.push(_newOptions);\n      }\n    };\n\n    // Logic for updating options based on layout\n    if ('horizontal' === props.attributes.layout) {\n      var updateOptions = [{\n        object: timelineDesigns,\n        label: 'Simple Design',\n        value: 'design-8',\n        position: 0\n      }, {\n        object: hrNavigationPositionOption,\n        label: 'Center',\n        value: 'center',\n        position: 0\n      }];\n\n      // Iterate through updateOptions and call addConditionalOptions\n      updateOptions.forEach(function (ele) {\n        addConditionalOptions(ele.object, ele.label, ele.value, ele.position);\n      });\n    } else {\n      var _updateOptions = [{\n        object: hrNavigationPositionOption,\n        label: 'Bottom',\n        value: 'bottom',\n        position: 0\n      }, {\n        object: paginationOptions,\n        label: 'Default',\n        value: 'default',\n        position: 1\n      }];\n\n      // Iterate through updateOptions and call addConditionalOptions\n      _updateOptions.forEach(function (ele) {\n        addConditionalOptions(ele.object, ele.label, ele.value, ele.position);\n      });\n    }\n    var general_settings = wp.element.createElement(PanelBody, {\n      title: __('Post Timeline General Settings')\n    }, wp.element.createElement(SelectControl, {\n      label: __('Select Layouts'),\n      options: layoutOptions,\n      value: props.attributes.layout,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          layout: value\n        });\n      }\n    }), wp.element.createElement(SelectControl, {\n      label: __('Select Designs'),\n      options: timelineDesigns,\n      value: props.attributes.designs,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          designs: value\n        });\n      }\n    }), wp.element.createElement(SelectControl, {\n      label: __('Select Skin'),\n      options: skinOptions,\n      value: props.attributes.skin,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          skin: value\n        });\n      }\n    }), wp.element.createElement(TextControl, {\n      label: __('Content Post Type'),\n      value: props.attributes.posttype,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          posttype: value\n        });\n      }\n    }), wp.element.createElement(\"p\", null, \"Don't Change This If You Are Creating Blog Posts Timeline or Define Content Type Of Your Timeline Like:- Posts\"), wp.element.createElement(TextControl, {\n      label: __('Taxonomy Name'),\n      value: props.attributes.taxonomy,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          taxonomy: value\n        });\n      }\n    }), wp.element.createElement(\"p\", null, \"Don't Change This If You Are Creating Blog Posts Timeline or Define Content Type Taxonomy.\"), wp.element.createElement(TextControl, {\n      label: __('Specific category(s) (Add category(s) slug - comma separated)'),\n      value: props.attributes.postcategory,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          postcategory: value\n        });\n      }\n    }), wp.element.createElement(\"p\", null, \"Show Category Specific Blog Posts. Like For cooltimeline.com/category/fb-history/ it will be fb-history\"), wp.element.createElement(TextControl, {\n      label: __('Specific tags(add tags slug)'),\n      value: props.attributes.tags,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          tags: value\n        });\n      }\n    }), wp.element.createElement(\"p\", null, \"Show Tag Specific Blog Posts. Like For cooltimeline.com/tag/fb-history/ it will be fb-history.\"), wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Stories Description?\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          storycontent: 'short'\n        });\n      },\n      className: props.attributes.storycontent == 'short' ? 'active' : '',\n      isSmall: true\n    }, \"Short\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          storycontent: 'full'\n        });\n      },\n      className: props.attributes.storycontent == 'full' ? 'active' : '',\n      isSmall: true\n    }, \"Full\")), wp.element.createElement(RangeControl, {\n      label: \"Posts Per Page\",\n      value: parseInt(props.attributes.postperpage),\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          postperpage: value.toString()\n        });\n      },\n      min: 1,\n      max: 50,\n      step: 1\n    }), wp.element.createElement(\"p\", null, \"You Can Show Pagination After These Posts In Vertical Timeline.\"), props.attributes.layout == \"horizontal\" && wp.element.createElement(RangeControl, {\n      label: \"Slide To Show?\",\n      value: props.attributes.items != '' ? parseInt(props.attributes.items) : 0,\n      onChange: function onChange(value) {\n        return value == 0 ? props.setAttributes({\n          items: ''\n        }) : props.setAttributes({\n          items: value.toString()\n        });\n      },\n      min: 0,\n      max: 10,\n      step: 1\n    }));\n    var advanced_settings = wp.element.createElement(PanelBody, {\n      title: __('Post Timeline Advanced Settings')\n    }, wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Stories Order?\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          order: 'ASC'\n        });\n      },\n      className: props.attributes.order == 'ASC' ? 'active' : '',\n      isSmall: true\n    }, \"ASC\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          order: 'DESC'\n        });\n      },\n      className: props.attributes.order == 'DESC' ? 'active' : '',\n      isSmall: true\n    }, \"DESC\")), wp.element.createElement(\"p\", null, \"For Ex :- \", props.attributes.order == 'ASC' ? 'ASC(1900-2017)' : 'DESC(2017-1900)'), wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Stories Date?\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          storyDateVisibility: 'show'\n        });\n      },\n      className: props.attributes.storyDateVisibility == 'show' ? 'active' : '',\n      isSmall: true\n    }, \"Show\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          storyDateVisibility: 'hide'\n        });\n      },\n      className: props.attributes.storyDateVisibility == 'hide' ? 'active' : '',\n      isSmall: true\n    }, \"Hide\")), 'show' === props.attributes.storyDateVisibility && wp.element.createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, wp.element.createElement(SelectControl, {\n      label: __('Date Formats'),\n      description: __('yes/no'),\n      options: DfromatOptions,\n      value: props.attributes.dateformat,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          dateformat: value\n        });\n      }\n    }), 'custom' === props.attributes.dateformat && wp.element.createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, wp.element.createElement(TextControl, {\n      label: __('Custom Date Format'),\n      value: props.attributes.customDateFormat,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          customDateFormat: value\n        });\n      }\n    }), wp.element.createElement(\"p\", null, \"Stories date formats e.g D,M,Y \", wp.element.createElement(ExternalLink, {\n      href: \"https://www.php.net/manual/en/function.date.php\"\n    }, \"Click here to view more\")))), wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Display Icons (By default Is Dot)\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          icons: 'icon'\n        });\n      },\n      className: props.attributes.icons == 'icon' ? 'active' : '',\n      isSmall: true\n    }, \"Icons\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          icons: 'dot'\n        });\n      },\n      className: props.attributes.icons == 'dot' ? 'active' : '',\n      isSmall: true\n    }, \"Dot\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          icons: 'none'\n        });\n      },\n      className: props.attributes.icons == 'none' ? 'active' : '',\n      isSmall: true\n    }, \"None\")), wp.element.createElement(SelectControl, {\n      label: __('Pagination Settings'),\n      options: paginationOptions,\n      value: props.attributes.pagination,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          pagination: value\n        });\n      }\n    }), wp.element.createElement(Fragment, null, wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Show Category Filters\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          filters: 'yes'\n        });\n      },\n      className: props.attributes.filters == 'yes' ? 'active' : '',\n      isSmall: true\n    }, \"Yes\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          filters: 'no'\n        });\n      },\n      className: props.attributes.filters == 'no' ? 'active' : '',\n      isSmall: true\n    }, \"No\")), props.attributes.filters == 'yes' && wp.element.createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, wp.element.createElement(\"p\", null, \"Note:-Please add value in Taxonomy field before using it.\"), wp.element.createElement(TextControl, {\n      label: __('Add categories slug for filters eg(stories,our-history)'),\n      value: props.attributes.filtercategories,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          filtercategories: value\n        });\n      }\n    }))), \"compact\" !== props.attributes.layout && 'custom' !== props.attributes.based && wp.element.createElement(Fragment, null, wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Year Label Setting\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          hrYearLabel: 'show'\n        });\n      },\n      className: props.attributes.hrYearLabel == 'show' ? 'active' : '',\n      isSmall: true\n    }, \"Show\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          hrYearLabel: 'hide'\n        });\n      },\n      className: props.attributes.hrYearLabel == 'hide' ? 'active' : '',\n      isSmall: true\n    }, \"Hide\"))), (props.attributes.hrYearLabel == \"show\" || \"compact\" === props.attributes.layout) && 'custom' !== props.attributes.based && wp.element.createElement(Fragment, null, wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Year Navigation Setting\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          hrNavigation: 'show'\n        });\n      },\n      className: props.attributes.hrNavigation == 'show' ? 'active' : '',\n      isSmall: true\n    }, \"Show\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          hrNavigation: 'hide'\n        });\n      },\n      className: props.attributes.hrNavigation == 'hide' ? 'active' : '',\n      isSmall: true\n    }, \"Hide\"))), (props.attributes.hrYearLabel == \"show\" || \"compact\" === props.attributes.layout) && props.attributes.hrNavigation == \"show\" && 'custom' !== props.attributes.based && wp.element.createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, wp.element.createElement(SelectControl, {\n      label: __('Year Navigation Position'),\n      options: hrNavigationPositionOption,\n      value: props.attributes.hrNavigationPosition === '' ? hrNavPostion : props.attributes.hrNavigationPosition,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          hrNavigationPosition: value\n        });\n      }\n    }), \"horizontal\" !== props.attributes.layout && \"bottom\" !== props.attributes.hrNavigationPosition && wp.element.createElement(SelectControl, {\n      label: __('Year Navigation Style'),\n      options: [{\n        label: \"Style 1\",\n        value: \"style-1\"\n      }, {\n        label: \"Style 2\",\n        value: \"style-2\"\n      }, {\n        label: \"Style 3\",\n        value: \"style-3\"\n      }],\n      value: props.attributes.navigationStyle,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          navigationStyle: value\n        });\n      }\n    })), wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Line Filling Settings?\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          lineFilling: 'true'\n        });\n      },\n      className: props.attributes.lineFilling == 'true' ? 'active' : '',\n      isSmall: true\n    }, \"True\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          lineFilling: 'false'\n        });\n      },\n      className: props.attributes.lineFilling == 'false' ? 'active' : '',\n      isSmall: true\n    }, \"False\")), wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Display read more?\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          readMoreVisibility: 'show'\n        });\n      },\n      className: props.attributes.readMoreVisibility == 'show' ? 'active' : '',\n      isSmall: true\n    }, \"Show\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          readMoreVisibility: 'hide'\n        });\n      },\n      className: props.attributes.readMoreVisibility == 'hide' ? 'active' : '',\n      isSmall: true\n    }, \"Hide\")), 'full' !== props.attributes.storycontent && wp.element.createElement(TextControl, {\n      label: __('Content Length'),\n      value: props.attributes.contentLength,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          contentLength: value\n        });\n      }\n    }), wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Display Post Meta?\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          postMetaVisibility: 'show'\n        });\n      },\n      className: props.attributes.postMetaVisibility == 'show' ? 'active' : '',\n      isSmall: true\n    }, \"Show\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          postMetaVisibility: 'hide'\n        });\n      },\n      className: props.attributes.postMetaVisibility == 'hide' ? 'active' : '',\n      isSmall: true\n    }, \"Hide\")), wp.element.createElement(TextControl, {\n      label: __('Meta Key'),\n      value: props.attributes.metaKey,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          metaKey: value\n        });\n      }\n    }), props.attributes.layout == \"horizontal\" && wp.element.createElement(Fragment, null, wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Autoplay Settings?\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          autoplay: 'true'\n        });\n      },\n      className: props.attributes.autoplay == 'true' ? 'active' : '',\n      isSmall: true\n    }, \"True\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          autoplay: 'false'\n        });\n      },\n      className: props.attributes.autoplay == 'false' ? 'active' : '',\n      isSmall: true\n    }, \"False\")), wp.element.createElement(TextControl, {\n      label: __('Slideshow Speed ?'),\n      value: props.attributes.autoplayspeed,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          autoplayspeed: value\n        });\n      }\n    }), wp.element.createElement(TextControl, {\n      label: __('Timeline Starting from Story e.g(2)'),\n      value: props.attributes.starton,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          starton: value\n        });\n      }\n    })), props.attributes.layout != \"horizontal\" && wp.element.createElement(Fragment, null, wp.element.createElement(SelectControl, {\n      label: __('Animation'),\n      description: __('yes/no'),\n      options: animationOptions,\n      value: props.attributes.animation,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          animation: value\n        });\n      }\n    }), wp.element.createElement(\"p\", null, \"Add Animations Effect Inside Timeline. You Can Check Effects Demo From \", wp.element.createElement(\"a\", {\n      target: \"_blank\",\n      href: \"http://michalsnik.github.io/aos/\"\n    }, \"AOS\"), \".\"), props.attributes.layout == \"compact\" && wp.element.createElement(SelectControl, {\n      label: __('Compact Layout Date&Title positon'),\n      description: __('yes/no'),\n      options: compact_ele_pos,\n      value: props.attributes.compactelepos,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          compactelepos: value\n        });\n      }\n    })));\n    return [!!props.isSelected && wp.element.createElement(InspectorControls, {\n      key: \"inspector\"\n    }, wp.element.createElement(TabPanel, {\n      className: \"ctl_shortcode-tab-settings\",\n      activeClass: \"active-tab\",\n      tabs: [{\n        name: 'general_settings',\n        title: 'General',\n        className: 'ctl-settings_tab-one',\n        content: general_settings\n      }, {\n        name: 'advanced_settings',\n        title: 'Advanced',\n        className: 'ctl-settings_tab-two',\n        content: advanced_settings\n      }]\n    }, function (tab) {\n      return wp.element.createElement(Card, null, tab.content);\n    })), props.attributes.isPreview ? wp.element.createElement(\"img\", {\n      src: _images_timeline_png__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\n    }) : wp.element.createElement(\"div\", {\n      className: props.className\n    }, wp.element.createElement(_layout_type__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      type: \"contenttm\",\n      LayoutImgPath: LayoutImgPath,\n      attributes: props.attributes\n    }), wp.element.createElement(\"div\", {\n      className: \"ctl-block-shortcode\"\n    }, props.attributes.layout == \"horizontal\" && wp.element.createElement(\"div\", null, \"[cool-content-timeline post-type=\\\"\", props.attributes.posttype, \"\\\" post-category=\\\"\", props.attributes.postcategory, \"\\\" taxonomy=\\\"\", props.attributes.taxonomy, \"\\\" tags=\\\"\", props.attributes.tags, \"\\\" layout=\\\"\", props.attributes.layout, \"\\\" designs=\\\"\", props.attributes.designs, \"\\\" skin=\\\"\", props.attributes.skin, \"\\\" show-posts=\\\"\", props.attributes.postperpage, \"\\\" story-date=\\\"\", props.attributes.storyDateVisibility, \"\\\" date-format=\\\"\", props.attributes.dateformat, \"\\\" custom-date-format=\\\"\", props.attributes.customDateFormat, \"\\\" icons=\\\"\", props.attributes.icons, \"\\\" story-content=\\\"\", props.attributes.storycontent, \"\\\" items=\\\"\", props.attributes.items, \"\\\" pagination=\\\"\", props.attributes.pagination, \"\\\" year-label=\\\"\", props.attributes.hrYearLabel, \"\\\" year-navigation=\\\"\", props.attributes.hrNavigation, \"\\\" navigation-position=\\\"\", props.attributes.hrNavigationPosition, \"\\\" filters=\\\"\", props.attributes.filters, \"\\\" filter-categories=\\\"\", props.attributes.filtercategories, \"\\\" start-on=\\\"\", props.attributes.starton, \"\\\" line-filling=\\\"\", props.attributes.lineFilling, \"\\\" read-more=\\\"\", props.attributes.readMoreVisibility, \"\\\" content-length=\\\"\", props.attributes.contentLength, \"\\\" post-meta=\\\"\", props.attributes.postMetaVisibility, \"\\\" meta-key=\\\"\", props.attributes.metaKey, \"\\\" autoplay=\\\"\", props.attributes.autoplay, \"\\\" autoplay-speed=\\\"\", props.attributes.autoplayspeed, \"\\\" order=\\\"\", props.attributes.order, \"\\\"]\"), props.attributes.layout != \"horizontal\" && wp.element.createElement(\"div\", null, \"[cool-content-timeline post-type=\\\"\", props.attributes.posttype, \"\\\" post-category=\\\"\", props.attributes.postcategory, \"\\\" taxonomy=\\\"\", props.attributes.taxonomy, \"\\\" tags=\\\"\", props.attributes.tags, \"\\\" layout=\\\"\", props.attributes.layout, \"\\\" designs=\\\"\", props.attributes.designs, \"\\\" skin=\\\"\", props.attributes.skin, \"\\\" show-posts=\\\"\", props.attributes.postperpage, \"\\\" story-date=\\\"\", props.attributes.storyDateVisibility, \"\\\" date-format=\\\"\", props.attributes.dateformat, \"\\\" custom-date-format=\\\"\", props.attributes.customDateFormat, \"\\\" icons=\\\"\", props.attributes.icons, \"\\\" animation=\\\"\", props.attributes.animation, \"\\\" story-content=\\\"\", props.attributes.storycontent, \"\\\" compact-ele-pos=\\\"\", props.attributes.compactelepos, \"\\\" pagination=\\\"\", props.attributes.pagination, \"\\\" year-label=\\\"\", props.attributes.hrYearLabel, \"\\\" year-navigation=\\\"\", props.attributes.hrNavigation, \"\\\" navigation-position=\\\"\", props.attributes.hrNavigationPosition, \"\\\" navigation-style=\\\"\", props.attributes.navigationStyle, \"\\\" filters=\\\"\", props.attributes.filters, \"\\\" filter-categories=\\\"\", props.attributes.filtercategories, \"\\\" line-filling=\\\"\", props.attributes.lineFilling, \"\\\" read-more=\\\"\", props.attributes.readMoreVisibility, \"\\\" content-length=\\\"\", props.attributes.contentLength, \"\\\" post-meta=\\\"\", props.attributes.postMetaVisibility, \"\\\" meta-key=\\\"\", props.attributes.metaKey, \"\\\" order=\\\"\", props.attributes.order, \"\\\"]\")))];\n  },\n  // Defining the front-end interface\n  save: function save() {\n    // Rendering in PHP\n    return null;\n  },\n  example: {\n    attributes: {\n      isPreview: true\n    }\n  }\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/content-tm-block.js\n");

/***/ }),

/***/ "./src/icons.js":
/*!**********************!*\
  !*** ./src/icons.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar CtlIcon = function CtlIcon() {\n  return wp.element.createElement(\"svg\", {\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 62 62\",\n    version: \"1.1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    xmlnsserif: \"http://www.serif.com/\",\n    style: {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 1.5\n    }\n  }, wp.element.createElement(\"g\", {\n    id: \"icon-only\",\n    serifid: \"icon only\"\n  }, wp.element.createElement(\"g\", {\n    id: \"icon-only1\",\n    serifid: \"icon-only\"\n  }, wp.element.createElement(\"g\", {\n    id: \"icon\"\n  }, wp.element.createElement(\"rect\", {\n    x: \"29.146\",\n    y: \"-0.042\",\n    width: \"3.149\",\n    height: \"61.44\"\n  }), wp.element.createElement(\"path\", {\n    d: \"M18.433,21.461l-0.007,-4.311l5.77,-4.905l-5.766,-4.923l0.003,-4.293l-18.433,-0l-0,18.432l18.433,0\",\n    style: {\n      fill: \"#f12945\"\n    }\n  }), wp.element.createElement(\"circle\", {\n    cx: \"30.72\",\n    cy: \"12.245\",\n    r: \"3.046\",\n    style: {\n      fill: \"#fff\",\n      stroke: \"#000\",\n      strokeWidth: 2.18 + \"px\"\n    }\n  }), wp.element.createElement(\"path\", {\n    d: \"M43.007,21.461l0.007,4.312l-5.77,4.905l5.766,4.922l-0.003,4.294l18.433,-0l0,-18.433l-18.433,0\",\n    style: {\n      fill: \"#01c5bd\"\n    }\n  }), wp.element.createElement(\"circle\", {\n    cx: \"30.72\",\n    cy: \"30.678\",\n    r: \"3.046\",\n    style: {\n      fill: \"#fff\",\n      stroke: \"#000\",\n      strokeWidth: 2.18 + \"px\"\n    }\n  }), wp.element.createElement(\"path\", {\n    d: \"M18.433,58.326l-0.007,-4.311l5.77,-4.905l-5.766,-4.923l0.003,-4.293l-18.433,-0l-0,18.432l18.433,0\",\n    style: {\n      fill: \"#f12945\"\n    }\n  }), wp.element.createElement(\"circle\", {\n    cx: \"30.72\",\n    cy: \"49.11\",\n    r: \"3.046\",\n    style: {\n      fill: \"#fff\",\n      stroke: \"#000\",\n      strokeWidth: 2.18 + \"px\"\n    }\n  })))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CtlIcon);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaWNvbnMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLWd1dGVuYmVyZy8uL3NyYy9pY29ucy5qcz8yZGZjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBDdGxJY29uID0gZnVuY3Rpb24gQ3RsSWNvbigpIHtcbiAgcmV0dXJuIHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcInN2Z1wiLCB7XG4gICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgIGhlaWdodDogXCIxMDAlXCIsXG4gICAgdmlld0JveDogXCIwIDAgNjIgNjJcIixcbiAgICB2ZXJzaW9uOiBcIjEuMVwiLFxuICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgeG1sbnNYbGluazogXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsXG4gICAgeG1sU3BhY2U6IFwicHJlc2VydmVcIixcbiAgICB4bWxuc3NlcmlmOiBcImh0dHA6Ly93d3cuc2VyaWYuY29tL1wiLFxuICAgIHN0eWxlOiB7XG4gICAgICBmaWxsUnVsZTogXCJldmVub2RkXCIsXG4gICAgICBjbGlwUnVsZTogXCJldmVub2RkXCIsXG4gICAgICBzdHJva2VMaW5lY2FwOiBcInJvdW5kXCIsXG4gICAgICBzdHJva2VMaW5lam9pbjogXCJyb3VuZFwiLFxuICAgICAgc3Ryb2tlTWl0ZXJsaW1pdDogMS41XG4gICAgfVxuICB9LCB3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoXCJnXCIsIHtcbiAgICBpZDogXCJpY29uLW9ubHlcIixcbiAgICBzZXJpZmlkOiBcImljb24gb25seVwiXG4gIH0sIHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcImdcIiwge1xuICAgIGlkOiBcImljb24tb25seTFcIixcbiAgICBzZXJpZmlkOiBcImljb24tb25seVwiXG4gIH0sIHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcImdcIiwge1xuICAgIGlkOiBcImljb25cIlxuICB9LCB3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoXCJyZWN0XCIsIHtcbiAgICB4OiBcIjI5LjE0NlwiLFxuICAgIHk6IFwiLTAuMDQyXCIsXG4gICAgd2lkdGg6IFwiMy4xNDlcIixcbiAgICBoZWlnaHQ6IFwiNjEuNDRcIlxuICB9KSwgd3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNMTguNDMzLDIxLjQ2MWwtMC4wMDcsLTQuMzExbDUuNzcsLTQuOTA1bC01Ljc2NiwtNC45MjNsMC4wMDMsLTQuMjkzbC0xOC40MzMsLTBsLTAsMTguNDMybDE4LjQzMywwXCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIGZpbGw6IFwiI2YxMjk0NVwiXG4gICAgfVxuICB9KSwgd3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFwiY2lyY2xlXCIsIHtcbiAgICBjeDogXCIzMC43MlwiLFxuICAgIGN5OiBcIjEyLjI0NVwiLFxuICAgIHI6IFwiMy4wNDZcIixcbiAgICBzdHlsZToge1xuICAgICAgZmlsbDogXCIjZmZmXCIsXG4gICAgICBzdHJva2U6IFwiIzAwMFwiLFxuICAgICAgc3Ryb2tlV2lkdGg6IDIuMTggKyBcInB4XCJcbiAgICB9XG4gIH0pLCB3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHtcbiAgICBkOiBcIk00My4wMDcsMjEuNDYxbDAuMDA3LDQuMzEybC01Ljc3LDQuOTA1bDUuNzY2LDQuOTIybC0wLjAwMyw0LjI5NGwxOC40MzMsLTBsMCwtMTguNDMzbC0xOC40MzMsMFwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBmaWxsOiBcIiMwMWM1YmRcIlxuICAgIH1cbiAgfSksIHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcImNpcmNsZVwiLCB7XG4gICAgY3g6IFwiMzAuNzJcIixcbiAgICBjeTogXCIzMC42NzhcIixcbiAgICByOiBcIjMuMDQ2XCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIGZpbGw6IFwiI2ZmZlwiLFxuICAgICAgc3Ryb2tlOiBcIiMwMDBcIixcbiAgICAgIHN0cm9rZVdpZHRoOiAyLjE4ICsgXCJweFwiXG4gICAgfVxuICB9KSwgd3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgZDogXCJNMTguNDMzLDU4LjMyNmwtMC4wMDcsLTQuMzExbDUuNzcsLTQuOTA1bC01Ljc2NiwtNC45MjNsMC4wMDMsLTQuMjkzbC0xOC40MzMsLTBsLTAsMTguNDMybDE4LjQzMywwXCIsXG4gICAgc3R5bGU6IHtcbiAgICAgIGZpbGw6IFwiI2YxMjk0NVwiXG4gICAgfVxuICB9KSwgd3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFwiY2lyY2xlXCIsIHtcbiAgICBjeDogXCIzMC43MlwiLFxuICAgIGN5OiBcIjQ5LjExXCIsXG4gICAgcjogXCIzLjA0NlwiLFxuICAgIHN0eWxlOiB7XG4gICAgICBmaWxsOiBcIiNmZmZcIixcbiAgICAgIHN0cm9rZTogXCIjMDAwXCIsXG4gICAgICBzdHJva2VXaWR0aDogMi4xOCArIFwicHhcIlxuICAgIH1cbiAgfSkpKSkpO1xufTtcbmV4cG9ydCBkZWZhdWx0IEN0bEljb247Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/icons.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _style_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.scss */ \"./src/style.scss\");\n/* harmony import */ var _story_tm_block_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./story-tm-block.js */ \"./src/story-tm-block.js\");\n/* harmony import */ var _content_tm_block_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./content-tm-block.js */ \"./src/content-tm-block.js\");\n// Include stylesheet\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLWd1dGVuYmVyZy8uL3NyYy9pbmRleC5qcz9kOWJlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEluY2x1ZGUgc3R5bGVzaGVldFxuaW1wb3J0ICcuL3N0eWxlLnNjc3MnO1xuaW1wb3J0ICcuL3N0b3J5LXRtLWJsb2NrLmpzJztcbmltcG9ydCAnLi9jb250ZW50LXRtLWJsb2NrLmpzJzsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/layout-type.js":
/*!****************************!*\
  !*** ./src/layout-type.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icons */ \"./src/icons.js\");\n\nvar CtlLayoutType = function CtlLayoutType(props) {\n  var heading = '';\n  if (!props.attributes.layout) {\n    return null;\n  }\n  if (props.type == 'contenttm') {\n    heading = 'Post Timeline Shortcode';\n  } else {\n    heading = 'Story Timeline Shortcode';\n  }\n  if (props.attributes.layout == \"horizontal\") {\n    var horizontal_img = props.LayoutImgPath + \"/cool-horizontal-timeline.jpg\";\n    var divStyle = {\n      color: 'white',\n      backgroundImage: 'url(' + horizontal_img + ')',\n      height: '300px',\n      width: '100%'\n    };\n    // return <div style={divStyle} className=\"ctl-block-image\">\n    return wp.element.createElement(\"div\", {\n      className: \"ctl-block-image\"\n    }, wp.element.createElement(\"div\", {\n      className: \"ctl-block-icon\"\n    }, wp.element.createElement(_icons__WEBPACK_IMPORTED_MODULE_0__[\"default\"], null)), wp.element.createElement(\"p\", null, heading));\n  } else {\n    var vertical_img = props.LayoutImgPath + \"/cool-vertical-timeline.jpg\";\n    var divStylev = {\n      color: 'white',\n      backgroundImage: 'url(' + vertical_img + ')',\n      height: '300px',\n      width: '100%'\n    };\n    // return <div style={divStylev} className=\"ctl-block-image\">\n    return wp.element.createElement(\"div\", {\n      className: \"ctl-block-image\"\n    }, wp.element.createElement(\"div\", {\n      className: \"ctl-block-icon\"\n    }, wp.element.createElement(_icons__WEBPACK_IMPORTED_MODULE_0__[\"default\"], null)), wp.element.createElement(\"p\", null, heading));\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CtlLayoutType);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGF5b3V0LXR5cGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1ndXRlbmJlcmcvLi9zcmMvbGF5b3V0LXR5cGUuanM/NmVhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ3RsSWNvbiBmcm9tICcuL2ljb25zJztcbnZhciBDdGxMYXlvdXRUeXBlID0gZnVuY3Rpb24gQ3RsTGF5b3V0VHlwZShwcm9wcykge1xuICB2YXIgaGVhZGluZyA9ICcnO1xuICBpZiAoIXByb3BzLmF0dHJpYnV0ZXMubGF5b3V0KSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgaWYgKHByb3BzLnR5cGUgPT0gJ2NvbnRlbnR0bScpIHtcbiAgICBoZWFkaW5nID0gJ1Bvc3QgVGltZWxpbmUgU2hvcnRjb2RlJztcbiAgfSBlbHNlIHtcbiAgICBoZWFkaW5nID0gJ1N0b3J5IFRpbWVsaW5lIFNob3J0Y29kZSc7XG4gIH1cbiAgaWYgKHByb3BzLmF0dHJpYnV0ZXMubGF5b3V0ID09IFwiaG9yaXpvbnRhbFwiKSB7XG4gICAgdmFyIGhvcml6b250YWxfaW1nID0gcHJvcHMuTGF5b3V0SW1nUGF0aCArIFwiL2Nvb2wtaG9yaXpvbnRhbC10aW1lbGluZS5qcGdcIjtcbiAgICB2YXIgZGl2U3R5bGUgPSB7XG4gICAgICBjb2xvcjogJ3doaXRlJyxcbiAgICAgIGJhY2tncm91bmRJbWFnZTogJ3VybCgnICsgaG9yaXpvbnRhbF9pbWcgKyAnKScsXG4gICAgICBoZWlnaHQ6ICczMDBweCcsXG4gICAgICB3aWR0aDogJzEwMCUnXG4gICAgfTtcbiAgICAvLyByZXR1cm4gPGRpdiBzdHlsZT17ZGl2U3R5bGV9IGNsYXNzTmFtZT1cImN0bC1ibG9jay1pbWFnZVwiPlxuICAgIHJldHVybiB3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgY2xhc3NOYW1lOiBcImN0bC1ibG9jay1pbWFnZVwiXG4gICAgfSwgd3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJjdGwtYmxvY2staWNvblwiXG4gICAgfSwgd3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KEN0bEljb24sIG51bGwpKSwgd3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFwicFwiLCBudWxsLCBoZWFkaW5nKSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHZlcnRpY2FsX2ltZyA9IHByb3BzLkxheW91dEltZ1BhdGggKyBcIi9jb29sLXZlcnRpY2FsLXRpbWVsaW5lLmpwZ1wiO1xuICAgIHZhciBkaXZTdHlsZXYgPSB7XG4gICAgICBjb2xvcjogJ3doaXRlJyxcbiAgICAgIGJhY2tncm91bmRJbWFnZTogJ3VybCgnICsgdmVydGljYWxfaW1nICsgJyknLFxuICAgICAgaGVpZ2h0OiAnMzAwcHgnLFxuICAgICAgd2lkdGg6ICcxMDAlJ1xuICAgIH07XG4gICAgLy8gcmV0dXJuIDxkaXYgc3R5bGU9e2RpdlN0eWxldn0gY2xhc3NOYW1lPVwiY3RsLWJsb2NrLWltYWdlXCI+XG4gICAgcmV0dXJuIHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwiY3RsLWJsb2NrLWltYWdlXCJcbiAgICB9LCB3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgY2xhc3NOYW1lOiBcImN0bC1ibG9jay1pY29uXCJcbiAgICB9LCB3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoQ3RsSWNvbiwgbnVsbCkpLCB3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIG51bGwsIGhlYWRpbmcpKTtcbiAgfVxufTtcbmV4cG9ydCBkZWZhdWx0IEN0bExheW91dFR5cGU7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/layout-type.js\n");

/***/ }),

/***/ "./src/story-tm-block.js":
/*!*******************************!*\
  !*** ./src/story-tm-block.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./icons */ \"./src/icons.js\");\n/* harmony import */ var _layout_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout-type */ \"./src/layout-type.js\");\n/* harmony import */ var _images_timeline_png__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./images/timeline.png */ \"./src/images/timeline.png\");\n/**\r\n * Block dependencies\r\n */\n\n\n\n\n\n/**\r\n * Internal block libraries\r\n */\nvar __ = wp.i18n.__;\nvar registerBlockType = wp.blocks.registerBlockType;\nvar baseURL = ctlUrl.CTP_PLUGIN_URL;\nvar wpBaseURL = ctlUrl.baseURL;\nvar LayoutImgPath = baseURL + '/includes/gutenberg-block/layout-images';\nvar _wp = wp,\n  apiFetch = _wp.apiFetch;\nvar _wp$blockEditor = wp.blockEditor,\n  RichText = _wp$blockEditor.RichText,\n  InspectorControls = _wp$blockEditor.InspectorControls,\n  BlockControls = _wp$blockEditor.BlockControls;\nvar Fragment = wp.element.Fragment;\nvar _wp$components = wp.components,\n  PanelBody = _wp$components.PanelBody,\n  PanelRow = _wp$components.PanelRow,\n  TextareaControl = _wp$components.TextareaControl,\n  TextControl = _wp$components.TextControl,\n  Dashicon = _wp$components.Dashicon,\n  Toolbar = _wp$components.Toolbar,\n  ButtonGroup = _wp$components.ButtonGroup,\n  Button = _wp$components.Button,\n  SelectControl = _wp$components.SelectControl,\n  Tooltip = _wp$components.Tooltip,\n  RangeControl = _wp$components.RangeControl,\n  TabPanel = _wp$components.TabPanel,\n  Card = _wp$components.Card,\n  CardBody = _wp$components.CardBody,\n  FormTokenField = _wp$components.FormTokenField,\n  ExternalLink = _wp$components.ExternalLink;\nvar ctlCategories = [];\nvar ctlfilterCategories = [];\n//http://localhost/wp-test/wp-json/cooltimeline/v1/categories\nvar allPosts = wp.apiFetch({\n  path: '/cooltimeline/v1/categories'\n}).then(function (posts) {\n  ctlCategories.push({\n    label: \"Select a Category\",\n    value: ''\n  });\n  if (posts.categories !== undefined) {\n    for (var key in posts.categories) {\n      ctlCategories.push({\n        label: posts.categories[key],\n        value: key\n      });\n      ctlfilterCategories.push(posts.categories[key]);\n    }\n    return ctlCategories;\n  }\n});\n/**\r\n * Register block\r\n\r\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (registerBlockType('cool-timleine/shortcode-block', {\n  // Block Title\n  title: __('Story Timeline Shortcode'),\n  // Block Description\n  description: __('Cool Timeline Shortcode Generator.'),\n  // Block Category\n  category: 'common',\n  // Block Icon\n  icon: _icons__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  // Block Keywords\n  keywords: [__('cool timeline'), __('timeline shortcode'), __('cool timeline block')],\n  attributes: {\n    layout: {\n      type: 'string',\n      \"default\": 'default'\n    },\n    skin: {\n      type: 'string',\n      \"default\": 'default'\n    },\n    postperpage: {\n      type: 'string',\n      \"default\": 10\n    },\n    storyDateVisibility: {\n      type: 'string',\n      \"default\": 'show'\n    },\n    dateformat: {\n      type: 'string',\n      \"default\": 'F j'\n    },\n    customDateFormat: {\n      type: 'string',\n      \"default\": ''\n    },\n    icons: {\n      type: 'string',\n      \"default\": 'dot'\n    },\n    animation: {\n      type: 'string',\n      \"default\": 'none'\n    },\n    designs: {\n      type: 'string',\n      \"default\": 'design-1'\n    },\n    storycontent: {\n      type: 'string',\n      \"default\": 'short'\n    },\n    category: {\n      type: 'string',\n      \"default\": ''\n    },\n    based: {\n      type: 'string',\n      \"default\": 'default'\n    },\n    compactelepos: {\n      type: 'string',\n      \"default\": 'main-date'\n    },\n    pagination: {\n      type: 'string',\n      \"default\": 'default'\n    },\n    hrYearLabel: {\n      type: 'string',\n      \"default\": 'show'\n    },\n    hrNavigation: {\n      type: 'string',\n      \"default\": 'hide'\n    },\n    hrNavigationPosition: {\n      type: 'string',\n      \"default\": ''\n    },\n    navigationStyle: {\n      type: 'string',\n      \"default\": 'style-1'\n    },\n    filters: {\n      type: 'string',\n      \"default\": 'no'\n    },\n    filtercategories: {\n      type: 'string',\n      \"default\": ''\n    },\n    items: {\n      type: 'string',\n      \"default\": ''\n    },\n    lineFilling: {\n      type: 'string',\n      \"default\": 'false'\n    },\n    readMoreVisibility: {\n      type: 'string',\n      \"default\": 'show'\n    },\n    contentLength: {\n      type: 'string',\n      \"default\": 50\n    },\n    autoplay: {\n      type: 'string',\n      \"default\": 'false'\n    },\n    autoplayspeed: {\n      type: 'string',\n      \"default\": 3000\n    },\n    starton: {\n      type: 'string',\n      \"default\": 0\n    },\n    order: {\n      type: 'string',\n      \"default\": 'DESC'\n    },\n    isPreview: {\n      type: 'boolean',\n      \"default\": false\n    },\n    filterCategoriesOption: {\n      type: 'array',\n      \"default\": []\n    },\n    filterSettingUsed: {\n      type: 'boolean',\n      \"default\": false\n    },\n    settingsMigration: {\n      type: 'string',\n      \"default\": 'true'\n    },\n    timelineTitle: {\n      type: 'string',\n      \"default\": ''\n    }\n  },\n  // Defining the edit interface\n  edit: function edit(props) {\n    var skinOptions = [{\n      value: 'default',\n      label: __('Default')\n    }, {\n      value: 'dark',\n      label: __('Dark')\n    }, {\n      value: 'light',\n      label: __('Light')\n    }];\n    var DfromatOptions = [{\n      value: \"F j\",\n      label: \"January 1 (F j)\"\n    }, {\n      value: \"F j Y\",\n      label: \"January 1 2019 (F j Y)\"\n    }, {\n      value: \"Y-m-d\",\n      label: \"2019-01-01 (Y-m-d)\"\n    }, {\n      value: \"m/d/Y\",\n      label: \"01/01/2019 (m/d/Y)\"\n    }, {\n      value: \"d/m/Y\",\n      label: \"01/01/2019 (d/m/Y)\"\n    }, {\n      value: \"F j Y g:i A\",\n      label: \"January 1 2019 11:10 AM (F j Y g:i A)\"\n    }, {\n      value: \"Y\",\n      label: \" 2019(Y)\"\n    }, {\n      label: \"Custom\",\n      value: \"custom\"\n    }];\n    var layoutOptions = [{\n      value: 'default',\n      label: __('Vertical')\n    }, {\n      value: 'horizontal',\n      label: __('Horizontal')\n    }, {\n      value: 'one-side',\n      label: __('One Side Layout')\n    }, {\n      value: 'compact',\n      label: __('Compact Layout')\n    }];\n    var animationOptions = [{\n      label: \"None\",\n      value: \"none\"\n    }, {\n      label: \"fade\",\n      value: \"fade\"\n    }, {\n      label: \"zoom-in\",\n      value: \"zoom-in\"\n    }, {\n      label: \"flip-right\",\n      value: \"flip-right\"\n    }, {\n      label: \"zoom-out\",\n      value: \"zoom-out\"\n    }, {\n      label: \"fade-up\",\n      value: \"fade-up\"\n    }, {\n      label: \"fade-down\",\n      value: \"fade-down\"\n    }, {\n      label: \"fade-left\",\n      value: \"fade-left\"\n    }, {\n      label: \"fade-right\",\n      value: \"fade-right\"\n    }, {\n      label: \"fade-up-right\",\n      value: \"fade-up-right\"\n    }, {\n      label: \"fade-up-left\",\n      value: \"fade-up-left\"\n    }, {\n      label: \"fade-down-right\",\n      value: \"fade-down-right\"\n    }, {\n      label: \"fade-down-left\",\n      value: \"fade-down-left\"\n    }, {\n      label: \"flip-up\",\n      value: \"flip-up\"\n    }, {\n      label: \"flip-down\",\n      value: \"flip-down\"\n    }, {\n      label: \"flip-left\",\n      value: \"flip-left\"\n    }, {\n      label: \"slide-up\",\n      value: \"slide-up\"\n    }, {\n      label: \"slide-left\",\n      value: \"slide-left\"\n    }, {\n      label: \"slide-right\",\n      value: \"slide-right\"\n    }, {\n      label: \"zoom-in-up\",\n      value: \"zoom-in-up\"\n    }, {\n      label: \"zoom-in-down\",\n      value: \"zoom-in-down\"\n    }, {\n      label: \"slide-down\",\n      value: \"slide-down\"\n    }, {\n      label: \"zoom-in-left\",\n      value: \"zoom-in-left\"\n    }, {\n      label: \"zoom-in-right\",\n      value: \"zoom-in-right\"\n    }, {\n      label: \"zoom-out-up\",\n      value: \"zoom-out-up\"\n    }, {\n      label: \"zoom-out-down\",\n      value: \"zoom-out-down\"\n    }, {\n      label: \"zoom-out-left\",\n      value: \"zoom-out-left\"\n    }, {\n      label: \"zoom-out-right\",\n      value: \"zoom-out-right\"\n    }];\n    var timelineDesigns = [{\n      label: \"Default\",\n      value: \"design-1\"\n    }, {\n      label: \"Flat Design\",\n      value: \"design-2\"\n    }, {\n      label: \"Classic Design\",\n      value: \"design-3\"\n    }, {\n      label: \"Elegant Design\",\n      value: \"design-4\"\n    }, {\n      label: \"Clean Design\",\n      value: \"design-5\"\n    }, {\n      label: \"Modern Design\",\n      value: \"design-6\"\n    }, {\n      label: \"Minimal Design\",\n      value: \"design-7\"\n    }];\n    var compact_ele_pos = [{\n      label: \"On top date/label below title\",\n      value: \"main-date\"\n    }, {\n      label: \"On top title below date/label\",\n      value: \"main-title\"\n    }];\n    var timeline_based_on = [{\n      label: \"Default(Date Based)\",\n      value: \"default\"\n    }, {\n      label: \"Custom Order\",\n      value: \"custom\"\n    }];\n    var paginationOptions = [{\n      label: \"Off\",\n      value: \"off\"\n    }, {\n      label: \"Ajax Load More\",\n      value: \"ajax_load_more\"\n    }];\n    var hrNavigationPositionOption = [{\n      label: \"Left\",\n      value: \"left\"\n    }, {\n      label: \"Right\",\n      value: \"right\"\n    }];\n    var hrNavPostion = 'horizontal' === props.attributes.layout ? 'left' : 'right';\n    var categoriesFilterUpdate = function categoriesFilterUpdate(e) {\n      props.setAttributes({\n        filterCategoriesOption: e\n      });\n      var allCategoryList = ctlCategories.map(function (values) {\n        if (e.includes(values.label)) {\n          return values.value;\n        }\n      });\n      var categoriesFilter = allCategoryList.filter(function (values) {\n        return values !== undefined;\n      });\n      props.setAttributes({\n        filtercategories: categoriesFilter.toString()\n      });\n    };\n    if (props.attributes.filterSettingUsed == false && props.attributes.category != '' && props.attributes.filtercategories == '' && props.attributes.filters == 'yes') {\n      var selectedCat = ctlCategories.filter(function (value) {\n        return value['value'] == props.attributes.category;\n      });\n      props.setAttributes({\n        filterCategoriesOption: [selectedCat[0]['label']]\n      });\n      props.setAttributes({\n        filtercategories: props.attributes.category\n      });\n      props.setAttributes({\n        filterSettingUsed: true\n      });\n    }\n    undefined === props.attributes.settingsMigration || 'true' === props.attributes.settingsMigration && props.setAttributes({\n      settingsMigration: 'false'\n    });\n\n    // Function to add conditional options to an array\n    var addConditionalOptions = function addConditionalOptions(options, label, value, position) {\n      if (position) {\n        var newOptions = {\n          label: label,\n          value: value\n        };\n        options.splice(position, 0, newOptions);\n      } else {\n        var _newOptions = {\n          label: label,\n          value: value\n        };\n        options.push(_newOptions);\n      }\n    };\n\n    // Logic for updating options based on layout\n    if ('horizontal' === props.attributes.layout) {\n      var updateOptions = [{\n        object: timelineDesigns,\n        label: 'Simple Design',\n        value: 'design-8',\n        position: 0\n      }, {\n        object: hrNavigationPositionOption,\n        label: 'Center',\n        value: 'center',\n        position: 0\n      }];\n\n      // Iterate through updateOptions and call addConditionalOptions\n      updateOptions.forEach(function (ele) {\n        addConditionalOptions(ele.object, ele.label, ele.value, ele.position);\n      });\n    } else {\n      var _updateOptions = [{\n        object: hrNavigationPositionOption,\n        label: 'Bottom',\n        value: 'bottom',\n        position: 0\n      }, {\n        object: paginationOptions,\n        label: 'Default',\n        value: 'default',\n        position: 1\n      }];\n\n      // Iterate through updateOptions and call addConditionalOptions\n      _updateOptions.forEach(function (ele) {\n        addConditionalOptions(ele.object, ele.label, ele.value, ele.position);\n      });\n    }\n    var general_settings = wp.element.createElement(PanelBody, {\n      title: __('Timeline General Settings')\n    }, wp.element.createElement(SelectControl, {\n      label: __('Select Layouts'),\n      options: layoutOptions,\n      value: props.attributes.layout,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          layout: value\n        });\n      }\n    }), wp.element.createElement(SelectControl, {\n      label: __('Select Designs'),\n      options: timelineDesigns,\n      value: props.attributes.designs,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          designs: value\n        });\n      }\n    }), wp.element.createElement(SelectControl, {\n      label: __('Select Skin'),\n      options: skinOptions,\n      value: props.attributes.skin,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          skin: value\n        });\n      }\n    }), wp.element.createElement(SelectControl, {\n      label: __('Categories'),\n      options: ctlCategories,\n      value: props.attributes.category,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          category: value\n        });\n      }\n    }), wp.element.createElement(\"p\", null, \"Create Category Specific Timeline (By Default - All Categories)\"), wp.element.createElement(SelectControl, {\n      label: __('Timeline Based On'),\n      options: timeline_based_on,\n      value: props.attributes.based,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          based: value\n        });\n      }\n    }), wp.element.createElement(\"p\", null, \"Show either date or custom label/text along with timeline stories.\"), wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Stories Description?\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          storycontent: 'short'\n        });\n      },\n      className: props.attributes.storycontent == 'short' ? 'active' : '',\n      isSmall: true\n    }, \"Short\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          storycontent: 'full'\n        });\n      },\n      className: props.attributes.storycontent == 'full' ? 'active' : '',\n      isSmall: true\n    }, \"Full\")), wp.element.createElement(RangeControl, {\n      label: \"Stories Per Page\",\n      value: parseInt(props.attributes.postperpage),\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          postperpage: value.toString()\n        });\n      },\n      min: 1,\n      max: 50,\n      step: 1\n    }), wp.element.createElement(\"p\", null, props.attributes.layout != \"horizontal\" && 'You Can Show Pagination After These Posts In Vertical Timeline.'), props.attributes.layout == \"horizontal\" && wp.element.createElement(Fragment, null, wp.element.createElement(RangeControl, {\n      label: \"Slide To Show?\",\n      value: props.attributes.items != '' ? parseInt(props.attributes.items) : 0,\n      onChange: function onChange(value) {\n        return value == 0 ? props.setAttributes({\n          items: ''\n        }) : props.setAttributes({\n          items: value.toString()\n        });\n      },\n      min: 0,\n      max: 10,\n      step: 1\n    })));\n    var advanced_settings = wp.element.createElement(PanelBody, {\n      title: __('Timeline Advanced Settings')\n    }, wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Stories Order?\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          order: 'ASC'\n        });\n      },\n      className: props.attributes.order == 'ASC' ? 'active' : '',\n      isSmall: true\n    }, \"ASC\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          order: 'DESC'\n        });\n      },\n      className: props.attributes.order == 'DESC' ? 'active' : '',\n      isSmall: true\n    }, \"DESC\")), wp.element.createElement(\"p\", null, \"For Ex :- \", props.attributes.order == 'ASC' ? 'ASC(1900-2017)' : 'DESC(2017-1900)'), wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Stories Date?\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          storyDateVisibility: 'show'\n        });\n      },\n      className: props.attributes.storyDateVisibility == 'show' ? 'active' : '',\n      isSmall: true\n    }, \"Show\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          storyDateVisibility: 'hide'\n        });\n      },\n      className: props.attributes.storyDateVisibility == 'hide' ? 'active' : '',\n      isSmall: true\n    }, \"Hide\")), 'show' === props.attributes.storyDateVisibility && wp.element.createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, wp.element.createElement(SelectControl, {\n      label: __('Date Formats'),\n      description: __('yes/no'),\n      options: DfromatOptions,\n      value: props.attributes.dateformat,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          dateformat: value\n        });\n      }\n    }), 'custom' === props.attributes.dateformat && wp.element.createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, wp.element.createElement(TextControl, {\n      label: __('Custom Date Format'),\n      value: props.attributes.customDateFormat,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          customDateFormat: value\n        });\n      }\n    }), wp.element.createElement(\"p\", null, \"Stories date formats e.g D,M,Y \", wp.element.createElement(ExternalLink, {\n      href: \"https://www.php.net/manual/en/function.date.php\"\n    }, \"Click here to view more\")))), wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Display Icons (By default Is Dot)\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          icons: 'icon'\n        });\n      },\n      className: props.attributes.icons == 'icon' ? 'active' : '',\n      isSmall: true\n    }, \"Icons\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          icons: 'dot'\n        });\n      },\n      className: props.attributes.icons == 'dot' ? 'active' : '',\n      isSmall: true\n    }, \"Dot\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          icons: 'none'\n        });\n      },\n      className: props.attributes.icons == 'none' ? 'active' : '',\n      isSmall: true\n    }, \"None\")), wp.element.createElement(SelectControl, {\n      label: __('Pagination Settings'),\n      options: paginationOptions,\n      value: props.attributes.pagination,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          pagination: value\n        });\n      }\n    }), wp.element.createElement(Fragment, null, wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Show Category Filters\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          filters: 'yes'\n        });\n      },\n      className: props.attributes.filters == 'yes' ? 'active' : '',\n      isSmall: true\n    }, \"Yes\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          filters: 'no'\n        });\n      },\n      className: props.attributes.filters == 'no' ? 'active' : '',\n      isSmall: true\n    }, \"No\"))), props.attributes.filters == 'yes' && wp.element.createElement(FormTokenField, {\n      label: __('Select filter category'),\n      value: props.attributes.filterCategoriesOption,\n      suggestions: ctlfilterCategories,\n      onChange: function onChange(value) {\n        categoriesFilterUpdate(value);\n      },\n      placeholder: 'All',\n      __experimentalExpandOnFocus: true,\n      __experimentalShowHowTo: false\n    }), \"compact\" !== props.attributes.layout && 'custom' !== props.attributes.based && wp.element.createElement(Fragment, null, wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Year Label Setting\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          hrYearLabel: 'show'\n        });\n      },\n      className: props.attributes.hrYearLabel == 'show' ? 'active' : '',\n      isSmall: true\n    }, \"Show\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          hrYearLabel: 'hide'\n        });\n      },\n      className: props.attributes.hrYearLabel == 'hide' ? 'active' : '',\n      isSmall: true\n    }, \"Hide\"))), (props.attributes.hrYearLabel == \"show\" || \"compact\" === props.attributes.layout) && 'custom' !== props.attributes.based && wp.element.createElement(Fragment, null, wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Year Navigation Setting\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          hrNavigation: 'show'\n        });\n      },\n      className: props.attributes.hrNavigation == 'show' ? 'active' : '',\n      isSmall: true\n    }, \"Show\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          hrNavigation: 'hide'\n        });\n      },\n      className: props.attributes.hrNavigation == 'hide' ? 'active' : '',\n      isSmall: true\n    }, \"Hide\"))), (props.attributes.hrYearLabel == \"show\" || \"compact\" === props.attributes.layout) && props.attributes.hrNavigation == \"show\" && 'custom' !== props.attributes.based && wp.element.createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, wp.element.createElement(SelectControl, {\n      label: __('Year Navigation Position'),\n      options: hrNavigationPositionOption,\n      value: props.attributes.hrNavigationPosition === '' ? hrNavPostion : props.attributes.hrNavigationPosition,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          hrNavigationPosition: value\n        });\n      }\n    }), \"horizontal\" !== props.attributes.layout && \"bottom\" !== props.attributes.hrNavigationPosition && wp.element.createElement(SelectControl, {\n      label: __('Year Navigation Style'),\n      options: [{\n        label: \"Style 1\",\n        value: \"style-1\"\n      }, {\n        label: \"Style 2\",\n        value: \"style-2\"\n      }, {\n        label: \"Style 3\",\n        value: \"style-3\"\n      }],\n      value: props.attributes.navigationStyle,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          navigationStyle: value\n        });\n      }\n    })), wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Line Filling Settings?\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          lineFilling: 'true'\n        });\n      },\n      className: props.attributes.lineFilling == 'true' ? 'active' : '',\n      isSmall: true\n    }, \"True\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          lineFilling: 'false'\n        });\n      },\n      className: props.attributes.lineFilling == 'false' ? 'active' : '',\n      isSmall: true\n    }, \"False\")), wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Display read more?\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          readMoreVisibility: 'show'\n        });\n      },\n      className: props.attributes.readMoreVisibility == 'show' ? 'active' : '',\n      isSmall: true\n    }, \"Show\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          readMoreVisibility: 'hide'\n        });\n      },\n      className: props.attributes.readMoreVisibility == 'hide' ? 'active' : '',\n      isSmall: true\n    }, \"Hide\")), 'full' !== props.attributes.storycontent && wp.element.createElement(TextControl, {\n      label: __('Content Length'),\n      value: props.attributes.contentLength,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          contentLength: value\n        });\n      }\n    }), props.attributes.layout == \"horizontal\" && wp.element.createElement(Fragment, null, wp.element.createElement(\"div\", {\n      className: \"ctl_shortcode-button-group_label\"\n    }, __(\"Autoplay Settings?\")), wp.element.createElement(ButtonGroup, {\n      className: \"ctl_shortcode-button-group\"\n    }, wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          autoplay: 'true'\n        });\n      },\n      className: props.attributes.autoplay == 'true' ? 'active' : '',\n      isSmall: true\n    }, \"True\"), wp.element.createElement(Button, {\n      onClick: function onClick(e) {\n        props.setAttributes({\n          autoplay: 'false'\n        });\n      },\n      className: props.attributes.autoplay == 'false' ? 'active' : '',\n      isSmall: true\n    }, \"False\")), wp.element.createElement(TextControl, {\n      label: __('Slideshow Speed ?'),\n      value: props.attributes.autoplayspeed,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          autoplayspeed: value\n        });\n      }\n    }), wp.element.createElement(TextControl, {\n      label: __('Timeline Starting from Story e.g(2)'),\n      value: props.attributes.starton,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          starton: value\n        });\n      }\n    })), props.attributes.layout != \"horizontal\" && wp.element.createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, wp.element.createElement(Fragment, null, wp.element.createElement(SelectControl, {\n      label: __('Animation'),\n      description: __('yes/no'),\n      options: animationOptions,\n      value: props.attributes.animation,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          animation: value\n        });\n      }\n    }), props.attributes.layout == \"compact\" && wp.element.createElement(SelectControl, {\n      label: __('Compact Layout Date&Title positon'),\n      description: __('yes/no'),\n      options: compact_ele_pos,\n      value: props.attributes.compactelepos,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          compactelepos: value\n        });\n      }\n    })), wp.element.createElement(TextControl, {\n      label: __('Timeline Title'),\n      value: props.attributes.timelineTitle,\n      onChange: function onChange(value) {\n        return props.setAttributes({\n          timelineTitle: value\n        });\n      }\n    })));\n    return [!!props.isSelected && wp.element.createElement(InspectorControls, {\n      key: \"inspector\"\n    }, wp.element.createElement(TabPanel, {\n      className: \"ctl_shortcode-tab-settings\",\n      activeClass: \"active-tab\",\n      tabs: [{\n        name: 'general_settings',\n        title: 'General',\n        className: 'ctl-settings_tab-one',\n        content: general_settings\n      }, {\n        name: 'advanced_settings',\n        title: 'Advanced',\n        className: 'ctl-settings_tab-two',\n        content: advanced_settings\n      }]\n    }, function (tab) {\n      return wp.element.createElement(Card, null, tab.content);\n    })), props.attributes.isPreview ? wp.element.createElement(\"img\", {\n      src: _images_timeline_png__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\n    }) : wp.element.createElement(\"div\", {\n      className: props.className,\n      key: props.clientId\n    }, wp.element.createElement(_layout_type__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      type: \"storytm\",\n      LayoutImgPath: LayoutImgPath,\n      attributes: props.attributes\n    }), wp.element.createElement(\"div\", {\n      className: \"ctl-block-shortcode\"\n    }, props.attributes.layout == \"horizontal\" && wp.element.createElement(\"div\", null, \"[cool-timeline category=\\\"\", props.attributes.category, \"\\\" layout=\\\"\", props.attributes.layout, \"\\\" designs=\\\"\", props.attributes.designs, \"\\\" skin=\\\"\", props.attributes.skin, \"\\\" show-posts=\\\"\", props.attributes.postperpage, \"\\\" story-date=\\\"\", props.attributes.storyDateVisibility, \"\\\" date-format=\\\"\", props.attributes.dateformat, \"\\\" custom-date-format=\\\"\", props.attributes.customDateFormat, \"\\\" icons=\\\"\", props.attributes.icons, \"\\\" story-content=\\\"\", props.attributes.storycontent, \"\\\" based=\\\"\", props.attributes.based, \"\\\" items=\\\"\", props.attributes.items, \"\\\" pagination=\\\"\", props.attributes.pagination, \"\\\" year-label=\\\"\", props.attributes.hrYearLabel, \"\\\" year-navigation=\\\"\", props.attributes.hrNavigation, \"\\\" navigation-position=\\\"\", props.attributes.hrNavigationPosition, \"\\\" filters=\\\"\", props.attributes.filters, \"\\\" filter-categories=\\\"\", props.attributes.filtercategories, \"\\\" start-on=\\\"\", props.attributes.starton, \"\\\" line-filling=\\\"\", props.attributes.lineFilling, \"\\\" read-more=\\\"\", props.attributes.readMoreVisibility, \"\\\" content-length=\\\"\", props.attributes.contentLength, \"\\\" autoplay=\\\"\", props.attributes.autoplay, \"\\\" autoplay-speed=\\\"\", props.attributes.autoplayspeed, \"\\\" order=\\\"\", props.attributes.order, \"\\\"]\"), props.attributes.layout != \"horizontal\" && wp.element.createElement(\"div\", null, \"[cool-timeline category=\\\"\", props.attributes.category, \"\\\" layout=\\\"\", props.attributes.layout, \"\\\" designs=\\\"\", props.attributes.designs, \"\\\" skin=\\\"\", props.attributes.skin, \"\\\" show-posts=\\\"\", props.attributes.postperpage, \"\\\" story-date=\\\"\", props.attributes.storyDateVisibility, \"\\\" date-format=\\\"\", props.attributes.dateformat, \"\\\" custom-date-format=\\\"\", props.attributes.customDateFormat, \"\\\" icons=\\\"\", props.attributes.icons, \"\\\" animation=\\\"\", props.attributes.animation, \"\\\" story-content=\\\"\", props.attributes.storycontent, \"\\\" based=\\\"\", props.attributes.based, \"\\\" compact-ele-pos=\\\"\", props.attributes.compactelepos, \"\\\" pagination=\\\"\", props.attributes.pagination, \"\\\" year-label=\\\"\", props.attributes.hrYearLabel, \"\\\" year-navigation=\\\"\", props.attributes.hrNavigation, \"\\\" navigation-position=\\\"\", props.attributes.hrNavigationPosition, \"\\\" navigation-style=\\\"\", props.attributes.navigationStyle, \"\\\" filters=\\\"\", props.attributes.filters, \"\\\" filter-categories=\\\"\", props.attributes.filtercategories, \"\\\" line-filling=\\\"\", props.attributes.lineFilling, \"\\\" read-more=\\\"\", props.attributes.readMoreVisibility, \"\\\" content-length=\\\"\", props.attributes.contentLength, \"\\\" order=\\\"\", props.attributes.order, \"\\\" timeline-title=\\\"\", props.attributes.timelineTitle, \"\\\"]\")))];\n  },\n  // Defining the front-end interface\n  save: function save() {\n    // Rendering in PHP\n    return null;\n  },\n  example: {\n    attributes: {\n      isPreview: true\n    }\n  }\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/story-tm-block.js\n");

/***/ }),

/***/ "./src/images/timeline.png":
/*!*********************************!*\
  !*** ./src/images/timeline.png ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"images/timeline.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW1hZ2VzL3RpbWVsaW5lLnBuZyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1ndXRlbmJlcmcvLi9zcmMvaW1hZ2VzL3RpbWVsaW5lLnBuZz82ODQzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbWFnZXMvdGltZWxpbmUucG5nXCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/images/timeline.png\n");

/***/ }),

/***/ "./src/style.scss":
/*!************************!*\
  !*** ./src/style.scss ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3R5bGUuc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1ndXRlbmJlcmcvLi9zcmMvc3R5bGUuc2Nzcz9iZmM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/style.scss\n");

/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var ReactVersion = '18.3.1';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  transition: null\n};\n\nvar ReactCurrentActQueue = {\n  current: null,\n  // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n  isBatchingLegacy: false,\n  didScheduleLegacyUpdate: false\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar ReactDebugCurrentFrame = {};\nvar currentExtraStackFrame = null;\nfunction setExtraStackFrame(stack) {\n  {\n    currentExtraStackFrame = stack;\n  }\n}\n\n{\n  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n    {\n      currentExtraStackFrame = stack;\n    }\n  }; // Stack implementation injected by the current renderer.\n\n\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentExtraStackFrame) {\n      stack += currentExtraStackFrame;\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner\n};\n\n{\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar assign = Object.assign;\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {\n    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n  }\n\n  var propName; // Original props are copied\n\n  var props = assign({}, element.props); // Reserved names are extracted\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = key.replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getElementKey(element, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    {\n      checkKeyStringCoercion(element.key);\n    }\n\n    return escape('' + element.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    var _child = children;\n    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n\n    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n\n    if (isArray(mappedChild)) {\n      var escapedChildKey = '';\n\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n\n      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n        return c;\n      });\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        {\n          // The `if` statement here prevents auto-disabling of the safe\n          // coercion ESLint rule, so we must manually disable it below.\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n            checkKeyStringCoercion(mappedChild.key);\n          }\n        }\n\n        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n        // eslint-disable-next-line react-internal/safe-string-coercion\n        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);\n      }\n\n      array.push(mappedChild);\n    }\n\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n      var iterableChildren = children;\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(iterableChildren);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n      }\n    } else if (type === 'object') {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      var childrenString = String(children);\n      throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  var count = 0;\n  mapIntoArray(children, result, '', '', function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  var n = 0;\n  mapChildren(children, function () {\n    n++; // Don't return anything\n  });\n  return n;\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  mapChildren(children, function () {\n    forEachFunc.apply(this, arguments); // Don't return anything.\n  }, forEachContext);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  return mapChildren(children, function (child) {\n    return child;\n  }) || [];\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    throw new Error('React.Children.only expected to receive a single React element child.');\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue) {\n  // TODO: Second argument used to be an optional `calculateChangedBits`\n  // function. Warn to reserve for future use?\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null,\n    // Add these to use same hidden class in VM as ServerContext\n    _defaultValue: null,\n    _globalName: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n  var hasWarnedAboutDisplayNameOnConsumer = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      },\n      displayName: {\n        get: function () {\n          return context.displayName;\n        },\n        set: function (displayName) {\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\n            warn('Setting `displayName` on Context.Consumer has no effect. ' + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n\n            hasWarnedAboutDisplayNameOnConsumer = true;\n          }\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nvar Uninitialized = -1;\nvar Pending = 0;\nvar Resolved = 1;\nvar Rejected = 2;\n\nfunction lazyInitializer(payload) {\n  if (payload._status === Uninitialized) {\n    var ctor = payload._result;\n    var thenable = ctor(); // Transition to the next state.\n    // This might throw either because it's missing or throws. If so, we treat it\n    // as still uninitialized and try again next time. Which is the same as what\n    // happens if the ctor or any wrappers processing the ctor throws. This might\n    // end up fixing it if the resolution was a concurrency bug.\n\n    thenable.then(function (moduleObject) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var resolved = payload;\n        resolved._status = Resolved;\n        resolved._result = moduleObject;\n      }\n    }, function (error) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var rejected = payload;\n        rejected._status = Rejected;\n        rejected._result = error;\n      }\n    });\n\n    if (payload._status === Uninitialized) {\n      // In case, we're still uninitialized, then we're waiting for the thenable\n      // to resolve. Set it as pending in the meantime.\n      var pending = payload;\n      pending._status = Pending;\n      pending._result = thenable;\n    }\n  }\n\n  if (payload._status === Resolved) {\n    var moduleObject = payload._result;\n\n    {\n      if (moduleObject === undefined) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\\n\\n\" + 'Did you accidentally put curly braces around the import?', moduleObject);\n      }\n    }\n\n    {\n      if (!('default' in moduleObject)) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n      }\n    }\n\n    return moduleObject.default;\n  } else {\n    throw payload._result;\n  }\n}\n\nfunction lazy(ctor) {\n  var payload = {\n    // We use these fields to store the result.\n    _status: Uninitialized,\n    _result: ctor\n  };\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes; // $FlowFixMe\n\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.forwardRef((props, ref) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!render.name && !render.displayName) {\n          render.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.memo((props) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!type.name && !type.displayName) {\n          type.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  {\n    if (dispatcher === null) {\n      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n    }\n  } // Will result in a null access error if accessed outside render phase. We\n  // intentionally don't throw our own error because this is in a hot path.\n  // Also helps ensure this is inlined.\n\n\n  return dispatcher;\n}\nfunction useContext(Context) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    // TODO: add a more generic warning for invalid values.\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useInsertionEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useInsertionEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\nfunction useTransition() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\nfunction useDeferredValue(value) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value);\n}\nfunction useId() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useId();\n}\nfunction useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher$1.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher$1.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      setExtraStackFrame(stack);\n    } else {\n      setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n  }\n\n  {\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nfunction startTransition(scope, options) {\n  var prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = {};\n  var currentTransition = ReactCurrentBatchConfig.transition;\n\n  {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  try {\n    scope();\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        var updatedFibersCount = currentTransition._updatedFibers.size;\n\n        if (updatedFibersCount > 10) {\n          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n        }\n\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nvar didWarnAboutMessageChannel = false;\nvar enqueueTaskImpl = null;\nfunction enqueueTask(task) {\n  if (enqueueTaskImpl === null) {\n    try {\n      // read require off the module object to get around the bundlers.\n      // we don't want them to detect a require and bundle a Node polyfill.\n      var requireString = ('require' + Math.random()).slice(0, 7);\n      var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n      // version of setImmediate, bypassing fake timers if any.\n\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n    } catch (_err) {\n      // we're in a browser\n      // we can't use regular timers because they may still be faked\n      // so we try MessageChannel+postMessage instead\n      enqueueTaskImpl = function (callback) {\n        {\n          if (didWarnAboutMessageChannel === false) {\n            didWarnAboutMessageChannel = true;\n\n            if (typeof MessageChannel === 'undefined') {\n              error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n            }\n          }\n        }\n\n        var channel = new MessageChannel();\n        channel.port1.onmessage = callback;\n        channel.port2.postMessage(undefined);\n      };\n    }\n  }\n\n  return enqueueTaskImpl(task);\n}\n\nvar actScopeDepth = 0;\nvar didWarnNoAwaitAct = false;\nfunction act(callback) {\n  {\n    // `act` calls can be nested, so we track the depth. This represents the\n    // number of `act` scopes on the stack.\n    var prevActScopeDepth = actScopeDepth;\n    actScopeDepth++;\n\n    if (ReactCurrentActQueue.current === null) {\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\n      // will detect the queue and use it instead of Scheduler.\n      ReactCurrentActQueue.current = [];\n    }\n\n    var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n    var result;\n\n    try {\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n      // set to `true` while the given callback is executed, not for updates\n      // triggered during an async event, because this is how the legacy\n      // implementation of `act` behaved.\n      ReactCurrentActQueue.isBatchingLegacy = true;\n      result = callback(); // Replicate behavior of original `act` implementation in legacy mode,\n      // which flushed updates immediately after the scope function exits, even\n      // if it's an async function.\n\n      if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {\n        var queue = ReactCurrentActQueue.current;\n\n        if (queue !== null) {\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n          flushActQueue(queue);\n        }\n      }\n    } catch (error) {\n      popActScope(prevActScopeDepth);\n      throw error;\n    } finally {\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n    }\n\n    if (result !== null && typeof result === 'object' && typeof result.then === 'function') {\n      var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait\n      // for it to resolve before exiting the current scope.\n\n      var wasAwaited = false;\n      var thenable = {\n        then: function (resolve, reject) {\n          wasAwaited = true;\n          thenableResult.then(function (returnValue) {\n            popActScope(prevActScopeDepth);\n\n            if (actScopeDepth === 0) {\n              // We've exited the outermost act scope. Recursively flush the\n              // queue until there's no remaining work.\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }, function (error) {\n            // The callback threw an error.\n            popActScope(prevActScopeDepth);\n            reject(error);\n          });\n        }\n      };\n\n      {\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\n          // eslint-disable-next-line no-undef\n          Promise.resolve().then(function () {}).then(function () {\n            if (!wasAwaited) {\n              didWarnNoAwaitAct = true;\n\n              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');\n            }\n          });\n        }\n      }\n\n      return thenable;\n    } else {\n      var returnValue = result; // The callback is not an async function. Exit the current scope\n      // immediately, without awaiting.\n\n      popActScope(prevActScopeDepth);\n\n      if (actScopeDepth === 0) {\n        // Exiting the outermost act scope. Flush the queue.\n        var _queue = ReactCurrentActQueue.current;\n\n        if (_queue !== null) {\n          flushActQueue(_queue);\n          ReactCurrentActQueue.current = null;\n        } // Return a thenable. If the user awaits it, we'll flush again in\n        // case additional work was scheduled by a microtask.\n\n\n        var _thenable = {\n          then: function (resolve, reject) {\n            // Confirm we haven't re-entered another `act` scope, in case\n            // the user does something weird like await the thenable\n            // multiple times.\n            if (ReactCurrentActQueue.current === null) {\n              // Recursively flush the queue until there's no remaining work.\n              ReactCurrentActQueue.current = [];\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }\n        };\n        return _thenable;\n      } else {\n        // Since we're inside a nested `act` scope, the returned thenable\n        // immediately resolves. The outer scope will flush the queue.\n        var _thenable2 = {\n          then: function (resolve, reject) {\n            resolve(returnValue);\n          }\n        };\n        return _thenable2;\n      }\n    }\n  }\n}\n\nfunction popActScope(prevActScopeDepth) {\n  {\n    if (prevActScopeDepth !== actScopeDepth - 1) {\n      error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');\n    }\n\n    actScopeDepth = prevActScopeDepth;\n  }\n}\n\nfunction recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n  {\n    var queue = ReactCurrentActQueue.current;\n\n    if (queue !== null) {\n      try {\n        flushActQueue(queue);\n        enqueueTask(function () {\n          if (queue.length === 0) {\n            // No additional work was scheduled. Finish.\n            ReactCurrentActQueue.current = null;\n            resolve(returnValue);\n          } else {\n            // Keep flushing work until there's none left.\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n          }\n        });\n      } catch (error) {\n        reject(error);\n      }\n    } else {\n      resolve(returnValue);\n    }\n  }\n}\n\nvar isFlushing = false;\n\nfunction flushActQueue(queue) {\n  {\n    if (!isFlushing) {\n      // Prevent re-entrance.\n      isFlushing = true;\n      var i = 0;\n\n      try {\n        for (; i < queue.length; i++) {\n          var callback = queue[i];\n\n          do {\n            callback = callback(true);\n          } while (callback !== null);\n        }\n\n        queue.length = 0;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        queue = queue.slice(i + 1);\n        throw error;\n      } finally {\n        isFlushing = false;\n      }\n    }\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.act = act;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.startTransition = startTransition;\nexports.unstable_act = act;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useDeferredValue = useDeferredValue;\nexports.useEffect = useEffect;\nexports.useId = useId;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useInsertionEffect = useInsertionEffect;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.useSyncExternalStore = useSyncExternalStore;\nexports.useTransition = useTransition;\nexports.version = ReactVersion;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react.development.js\n");

/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"./node_modules/react/cjs/react.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBR0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLWd1dGVuYmVyZy8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcz9hYjViIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl + "../";
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;